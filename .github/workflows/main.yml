name: ModInjector

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC
  workflow_dispatch: # Allow manual runs
    inputs:
      release_title:
        required: true
      release_description:
        required: false
      release_tag:
        required: true


jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.check.outputs.new_version }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r check-version-requirements.txt

      - name: Check for the latest version
        id: check
        run: |
          python check_version.py
      - name: Commit and push changes
        if: needs.check_version.outputs.new_version != 'false'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: Updated version.txt
          add: version.txt

  download_decrypted_ipa:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: check_version
    if: needs.check_version.outputs.new_version != 'false' && github.event_name != 'workflow_dispatch'
    steps:
      - name: Debugging
        run: |
          echo "New version detected: ${{ needs.check_version.outputs.new_version }}"
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r download-ipa-requirements.txt
        
      - name: Decode and decrypt session file
        run: |
          echo "${{ secrets.ENC_SESSION_FILE }}" | base64 --decode > user_session.session.enc
          openssl enc -aes-256-cbc -d -in user_session.session.enc -out user_session.session -k "${{ secrets.SESSION_PASSWORD }}"

      - name: Download decrypted IPA
        run: python download_ipa.py

      - name: Clean up session file
        run: rm user_session.session

      - name: Upload agario.ipa as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: agario-ipa
          path: downloads/Agario.ipa
      

  upload_old_agario_ipa:
    runs-on: ubuntu-latest
    needs: check_version
    if: github.event_name == 'workflow_dispatch'
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Download agario.ipa from latest release
        run: gh release download --pattern 'Agario.ipa' --dir downloads
      - name: Upload agario.ipa as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: agario-ipa
          path: downloads/Agario.ipa

  inject_mods_and_upload_new_release:
    timeout-minutes: 60 # this really shouldn't freeze, but just in case, given that it is running daily
    runs-on: ubuntu-latest
    needs: download_decrypted_ipa
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download decrypted IPA
        uses: actions/download-artifact@v4
        with:
          name: agario-ipa
          path: downloads

      - name: Rename copy to zip
        run: cp downloads/Agario.ipa downloads/Agario.zip
          

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Cyan
        run: pip install --force-reinstall https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip Pillow
        
      - name: Inject mods
        run: python inject_mods.py

      - name: Read version from file
        id: read_version
        run: echo "version=$(cat version.txt)" >> $GITHUB_ENV

      - name: Install PyGithub
        run: pip install PyGithub

      - name: Upload IPAs to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python upload_mods.py $GITHUB_TOKEN ${{ github.event.inputs.release_title }} ${{ github.event.inputs.release_description }}

  inject_mods_and_upload_old_release:
    timeout-minutes: 60 # this really shouldn't freeze, but just in case, given that it is running daily
    runs-on: ubuntu-latest
    needs: upload_old_agario_ipa
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download decrypted IPA
        uses: actions/download-artifact@v4
        with:
          name: agario-ipa
          path: downloads

      - name: Rename copy to zip
        run: cp downloads/Agario.ipa downloads/Agario.zip
          

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Cyan
        run: pip install --force-reinstall https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip Pillow
        
      - name: Inject mods
        run: python inject_mods.py

      - name: Read version from file
        id: read_version
        run: echo "version=$(cat version.txt)" >> $GITHUB_ENV

      - name: Install PyGithub
        run: pip install PyGithub

      - name: Upload IPAs to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python upload_mods.py $GITHUB_TOKEN "${{ github.event.inputs.release_title }}" "${{ github.event.inputs.release_description }}" "${{ github.event.inputs.release_tag }}"
