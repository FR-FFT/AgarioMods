name: Check for updates

on:
  schedule:
    - cron: '0 * * * *'  # hourly
  workflow_dispatch:

jobs:
  check_for_changes:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Check for update
        id: check_change
        run: |
          response=$(curl -s https://spangle-miniature-crime.glitch.me/?uid=1.6.1)  
          echo "Response: $response"

          
          
          if [[ "$response" != "https://www.mediafire.com/file/txcrv6dr4j3496e/SharkMod_1.7.1.ipa/file" ]]; then
            echo "Change detected!"
            echo "change_detected=$response" >> "$GITHUB_OUTPUT"
          else
            echo "No change detected."
            echo "change_detected=false" >> "$GITHUB_OUTPUT"
          fi

    outputs:
      change_detected: ${{ steps.check_change.outputs.change_detected }}

  download_ipa:
    if: needs.check_for_changes.outputs.change_detected != 'false'
    runs-on: ubuntu-latest
    needs: check_for_changes
    steps:
      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
    
      - name: Install cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install mediafire_rs
        run: cargo install mediafire_rs

      - name: Download IPA
        run: mdrs ${{ needs.check_for_changes.outputs.change_detected }}

  extract_dylib:
    runs-on: ubuntu-latest
    needs: download_ipa
    steps:
      - name: get ipa name
        id: get_ipa_name
        run: |
          ipa_name=$(ls | grep .ipa)
          echo "name=$ipa_name" >> $GITHUB_OUTPUT

      - name: unpack ipa
        run: unzip ${{ steps.get_ipa_name.outputs.name }}

      - name: extract dylib
        run: |
          cp Payload/agar.io.app/Frameworks/sharkmod.dylib sharkmod.dylib

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sharkmod.dylib
          path: sharkmod.dylib

      - name: Clean up workspace
        run: rm -rf Payload

  save_updated_dylib:
    runs-on: ubuntu-latest
    needs: extract_dylib
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sharkmod.dylib
          path: sharkmod.dylib

      - name: Move dylib
        run: |
          mv sharkmod.dylib mods/shark/tweaks/sharkmod.dylib -f

      - name: Update this workflow
        run: |
          sed -i -E "s#https://www.mediafire.com/file/[a-zA-Z0-9]+/[a-zA-Z0-9._-]+.ipa/file#${{ needs.check_for_changes.outputs.change_detected }}#" ./.github/workflows/check_updates.yml

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: Updated sharkmod.dylib
          add: mods/shark/tweaks/sharkmod.dylib .github/workflows/check_updates.yml

      - name: Trigger new release with main.yml
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          ipa_name="${{ steps.get_ipa_name.outputs.name }}"
          release_title="${ipa_name%.ipa}"
          release_version="${release_title#SharkMod_}"
          echo "release_title=$release_title"
          echo "release_version=$release_version"
          gh workflow run ModInjector -f release_title="$release_title" -f release_body="Automatically updated Shark's mod to latest version" -f release_tag="shark-v$release_version"



